{"version":3,"file":"_server-64a512bd.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/_server.js"],"sourcesContent":["import \"../../../chunks/index2.js\";\nimport { promises } from \"fs\";\nimport sharp from \"sharp\";\nimport { resolve, relative } from \"path\";\nimport { I as IMGDIR, f as fetchData } from \"../../../chunks/data.js\";\nfunction verifyPath(path) {\n  if (path === \"\") {\n    throw new Error(\"not a directory: \" + path);\n  }\n  const rpath = relative(IMGDIR, path);\n  if (rpath.startsWith(\"..\")) {\n    throw new Error(\"invalid directory: \" + path);\n  }\n}\nasync function GET(request) {\n  const urlParams = new URL(request.url).searchParams;\n  const op = urlParams.get(\"op\");\n  switch (op) {\n    case \"file\": {\n      const filename = resolve(IMGDIR, urlParams.get(\"file\"));\n      const thumb = urlParams.get(\"thumb\");\n      verifyPath(filename);\n      const contenttype = getContentTypeForFileType(filename);\n      const asset = await promises.readFile(filename);\n      let asset2 = asset;\n      if (thumb && contenttype != \"image/svg+xml\") {\n        asset2 = await sharp(asset).resize({ width: Math.max(32, Math.min(4e3, thumb)), withoutEnlargement: true }).toBuffer();\n      }\n      return new Response(asset2, {\n        headers: {\n          \"Content-Type\": contenttype\n        }\n      });\n    }\n    case \"dir\": {\n      const path = resolve(IMGDIR, urlParams.get(\"path\"));\n      verifyPath(path);\n      const asset = await fetchData(path, { listDirs: true, listFiles: false, per_page: 9999 });\n      let dirs = [];\n      for (var i = 0; i < asset.data.length; i++) {\n        dirs.push({ id: asset.data[i].fileName, text: asset.data[i].name });\n      }\n      return Response.json({ dirs });\n    }\n    default:\n      return new Response(\"\", { status: 400, statusText: \"invalid request\" });\n  }\n}\nfunction getContentTypeForFileType(filename) {\n  let splits = filename.toLowerCase().split(\".\");\n  if (splits.length >= 2) {\n    let type = splits[splits.length - 1];\n    switch (type) {\n      case \"jpg\":\n      case \"png\":\n        return \"image/\" + type;\n      case \"jpeg\":\n        return \"image/jpg\";\n      case \"svg\":\n        return \"image/svg+xml\";\n      case \"json\":\n        return \"application/json\";\n    }\n  }\n  return \"\";\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}